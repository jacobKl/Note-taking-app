{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","notes","addNote","title","note","counter","setState","titleHandler","e","target","value","noteHandler","submitToState","latestNote","id","toStorage","deleteNote","array","index","findIndex","item","splice","removeFromStorage","localStorage","setItem","JSON","stringify","removeItem","changeTitle","map","changeNote","noteText","saveIt","length","limit","i","max","key","push","parse","getItem","forEach","this","className","onClick","onChange","type","placeholder","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fe6713dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\"\n\nclass App extends Component{\n\n  state = {\n    notes: [],\n    addNote: false,\n    title: '',\n    note: '',\n    counter: 0\n  }\n\n  addNote = () =>{\n    this.setState({\n      addNote: !this.state.addNote\n    })\n  }\n\n  titleHandler = e => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  noteHandler = e => {\n    this.setState({\n      note: e.target.value\n    })\n  }\n\n  submitToState = () => {\n    const {title,note,counter} = this.state;\n\n    const latestNote = {id: counter,title: title, note: note};\n\n    this.toStorage(latestNote);\n\n    this.setState({\n      notes: [...this.state.notes,latestNote],\n      title: '',\n      note: '',\n      counter: this.state.counter + 1,\n      addNote: !this.state.addNote\n    })\n  } \n  \n  deleteNote = id => {\n    const array = this.state.notes;\n    const index = array.findIndex(item => item.id === id);\n    array.splice(index,1);\n    this.setState({\n      notes: array\n    });\n    this.removeFromStorage(id);\n  } \n\n  toStorage = note => {\n    localStorage.setItem(note.id,JSON.stringify(note));\n  }\n\n  removeFromStorage = id => {\n    localStorage.removeItem(id);\n  }\n\n  changeTitle = (title,note) => {\n    const array = this.state.notes;\n    array.map(item => {\n      if(item.id === note.id){\n        item.title = title;\n      }\n    })\n\n    this.setState({\n      notes: array\n    })\n  }\n\n  changeNote = (noteText,note) => {\n    const array = this.state.notes;\n    array.map(item => {\n      if(item.id === note.id){\n        item.note = noteText;\n      }\n    })\n\n    this.setState({\n      notes: array\n    })\n  }\n\n  saveIt = note => {\n    localStorage.setItem(note.id,JSON.stringify(note));\n  }\n\n  componentDidMount(){\n    if( localStorage.length!==0 ){\n       const array = [];\n       const limit = localStorage.length;\n       let i = 0;\n       let max = 0;\n       for(let key in localStorage){\n         if(i === limit){\n           break;\n         }\n          array.push(JSON.parse(localStorage.getItem(key)));\n          i++;\n       }\n       \n       array.forEach(item =>{\n         if(item.id>max){\n           max = item.id;\n         }\n       })\n       max++;\n\n\n       this.setState({\n         notes: array,\n         counter: max\n       })\n    }\n  }\n \n\n  render(){\n\n    const {notes,addNote} = this.state;\n    \n\n    return(\n      <div className=\"container-fluid p-0\">\n        <nav className=\"navbar navbar-light bg-light\">\n          <div className=\"navbar-brand\">\n              <i className=\"far fa-sticky-note\"></i>\n              <h3>NoteIt!</h3>\n          </div>\n          <i onClick={this.addNote} className=\"fas fa-plus text-primary\"></i>\n        </nav>\n\n        <div className=\"container\">\n          <div className=\"row justify-content-around text-center \">\n\n            {\n              addNote ? \n              <div className=\"add-note\">\n                <div className=\"card note-form col-sm-10 col-6-md\">\n                  <div className=\"card-header text-center\"><h3>Note</h3></div>\n                  <div className=\"card-body h-100\">\n                      <input onChange={this.titleHandler} type=\"text\" placeholder=\"Note title goes here\" className=\"form-control\"/>\n                      <textarea onChange={this.noteHandler} id=\"textarea\" className=\"form-control mt-2\" placeholder=\"Your note goes here :)\"></textarea>\n                  </div>\n                  <div className=\"card-footer\">\n                      <button onClick={this.submitToState} className=\"btn btn-success\">Add</button>\n                      <button onClick={this.addNote} className=\"btn btn-danger ml-1\">Cancel</button>\n                  </div>\n                </div>\n              </div>\n              :\n              notes.length===0 ? \n                <h2 className=\"font-weight-light mt-5\">Currently you have no notes, maybe create one?</h2>\n              :\n                notes.map(note => \n                <div key={note.id} className=\"card col-md-5 col-sm-10 p-0 m-4\">\n                  <div className=\"card-body\">\n                    <input value={note.title} onChange={(e) => this.changeTitle(e.target.value,note)} className=\"card-title form-control col-4 card-top input\"/>\n                    <input value={note.note} onChange={(e) => this.changeNote(e.target.value,note)} className=\"form-control input\"/>\n                  </div>\n                  <div className=\"card-footer\">\n                    <button onClick={() => this.saveIt(note)} className=\"btn w-50 text-primary\">\n                      Save\n                    </button>\n                    <button onClick={() => this.deleteNote(note.id)} className=\"btn w-50 text-primary\">\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              )\n            }\n            \n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}